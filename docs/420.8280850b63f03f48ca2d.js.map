{"version":3,"file":"420.8280850b63f03f48ca2d.js","mappings":"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","sources":["webpack://babylonjs-fluid-rendering/./src/scenes/FluidRenderer/fluidRendererSceneComponent.ts","webpack://babylonjs-fluid-rendering/./src/scenes/fluidSimulation2.ts","webpack://babylonjs-fluid-rendering/./src/assets/scenes/simple_round_table.glb","webpack://babylonjs-fluid-rendering/./src/scenes/fluidSimulationDemoGlass.ts","webpack://babylonjs-fluid-rendering/./src/scenes/fluidSimulationDemoHeightMap.ts","webpack://babylonjs-fluid-rendering/./src/scenes/fluidSimulationDemoMeshSDF.ts","webpack://babylonjs-fluid-rendering/./src/scenes/fluidSimulationDemoParticleCustomShape.ts","webpack://babylonjs-fluid-rendering/./src/assets/pictures/flare32bits.png","webpack://babylonjs-fluid-rendering/./src/scenes/fluidSimulationDemoParticleSystem.ts","webpack://babylonjs-fluid-rendering/./src/scenes/fluidSimulationDemoPrecomputeRendering.ts"],"sourcesContent":["import * as BABYLON from \"@babylonjs/core\";\n\nimport { FluidRenderer } from \"./fluidRenderer\";\n\nconst NAME_FLUIDRENDERER = \"FluidRenderer\";\nconst STEP_GATHERACTIVECAMERARENDERTARGET_FLUIDRENDERER = 1;\nconst STEP_AFTERCAMERADRAW_FLUIDRENDERER = 5;\n\ndeclare module \"@babylonjs/core/abstractScene\" {\n    export interface AbstractScene {\n        /** @hidden (Backing field) */\n        _fluidRenderer: BABYLON.Nullable<FluidRenderer>;\n\n        /**\n         * Gets or Sets the fluid renderer associated to the scene.\n         */\n        fluidRenderer: BABYLON.Nullable<FluidRenderer>;\n\n        /**\n         * Enables the fluid renderer and associates it with the scene\n         * @returns the FluidRenderer\n         */\n        enableFluidRenderer(): BABYLON.Nullable<FluidRenderer>;\n\n        /**\n         * Disables the fluid renderer associated with the scene\n         */\n        disableFluidRenderer(): void;\n    }\n}\n\nObject.defineProperty(BABYLON.Scene.prototype, \"fluidRenderer\", {\n    get: function (this: BABYLON.Scene) {\n        return this._fluidRenderer;\n    },\n    set: function (\n        this: BABYLON.Scene,\n        value: BABYLON.Nullable<FluidRenderer>\n    ) {\n        this._fluidRenderer = value;\n    },\n    enumerable: true,\n    configurable: true,\n});\n\nBABYLON.Scene.prototype.enableFluidRenderer =\n    function (): BABYLON.Nullable<FluidRenderer> {\n        if (this._fluidRenderer) {\n            return this._fluidRenderer;\n        }\n\n        this._fluidRenderer = new FluidRenderer(this);\n\n        return this._fluidRenderer;\n    };\n\nBABYLON.Scene.prototype.disableFluidRenderer = function (): void {\n    this._fluidRenderer?.dispose();\n    this._fluidRenderer = null;\n};\n\n/**\n * Defines the Geometry Buffer scene component responsible to manage a G-Buffer useful\n * in several rendering techniques.\n */\nexport class FluidRendererSceneComponent implements BABYLON.ISceneComponent {\n    /**\n     * The component name helpful to identify the component in the list of scene components.\n     */\n    public readonly name = NAME_FLUIDRENDERER;\n\n    /**\n     * The scene the component belongs to.\n     */\n    public scene: BABYLON.Scene;\n\n    /**\n     * Creates a new instance of the component for the given scene\n     * @param scene Defines the scene to register the component in\n     */\n    constructor(scene: BABYLON.Scene) {\n        this.scene = scene;\n    }\n\n    /**\n     * Registers the component in a given scene\n     */\n    public register(): void {\n        this.scene._gatherActiveCameraRenderTargetsStage.registerStep(\n            STEP_GATHERACTIVECAMERARENDERTARGET_FLUIDRENDERER,\n            this,\n            this._gatherActiveCameraRenderTargets\n        );\n        this.scene._afterCameraDrawStage.registerStep(\n            STEP_AFTERCAMERADRAW_FLUIDRENDERER,\n            this,\n            this._afterCameraDraw\n        );\n    }\n\n    private _gatherActiveCameraRenderTargets(/*renderTargets: BABYLON.SmartArrayNoDuplicate<BABYLON.RenderTargetTexture>*/): void {\n        this.scene.fluidRenderer?._prepareRendering();\n    }\n\n    private _afterCameraDraw(camera: BABYLON.Camera) {\n        this.scene.fluidRenderer?._render(camera);\n    }\n\n    /**\n     * Rebuilds the elements related to this component in case of\n     * context lost for instance.\n     */\n    public rebuild(): void {\n        if (this.scene._fluidRenderer) {\n            // Release resources first\n            this.scene.disableFluidRenderer();\n\n            // Re-enable\n            this.scene.enableFluidRenderer();\n        }\n    }\n\n    /**\n     * Disposes the component and the associated resources\n     */\n    public dispose(): void {\n        this.scene.disableFluidRenderer();\n    }\n}\n\nFluidRenderer._SceneComponentInitialization = (scene: BABYLON.Scene) => {\n    let component = scene._getComponent(\n        NAME_FLUIDRENDERER\n    ) as FluidRendererSceneComponent;\n    if (!component) {\n        component = new FluidRendererSceneComponent(scene);\n        scene._addComponent(component);\n    }\n};\n","import { CreateSceneClass } from \"../createScene\";\n\nimport * as BABYLON from \"@babylonjs/core\";\n\nimport \"./FluidRenderer/fluidRendererSceneComponent\";\n\nimport { FluidSimulationDemoBoxSphere } from \"./fluidSimulationDemoBoxSphere\";\nimport { FluidSimulationDemoHeightMap } from \"./fluidSimulationDemoHeightMap\";\nimport { FluidSimulationDemoBase } from \"./fluidSimulationDemoBase\";\nimport { FluidSimulationDemoPrecomputeRendering } from \"./fluidSimulationDemoPrecomputeRendering\";\nimport { FluidSimulationDemoParticleSystem } from \"./fluidSimulationDemoParticleSystem\";\nimport { FluidSimulationDemoParticleCustomShape } from \"./fluidSimulationDemoParticleCustomShape\";\nimport { FluidSimulationDemoGlass } from \"./fluidSimulationDemoGlass\";\nimport { FluidSimulationDemoMeshSDF } from \"./fluidSimulationDemoMeshSDF\";\n\nconst cameraMin = 0.1;\nconst cameraMax = 1000;\n\nexport class FluidRendering implements CreateSceneClass {\n    private _scene: BABYLON.Scene;\n\n    constructor() {\n        this._scene = null as any;\n    }\n\n    public async createScene(\n        engine: BABYLON.Engine,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        canvas: HTMLCanvasElement\n    ): Promise<BABYLON.Scene> {\n        const scene = new BABYLON.Scene(engine);\n\n        this._scene = scene;\n\n        (window as any).BABYLON = BABYLON;\n\n        const createCamera = () => {\n            const camera = new BABYLON.ArcRotateCamera(\n                \"ArcRotateCamera\",\n                3.06,\n                1.14,\n                2.96,\n                new BABYLON.Vector3(0, 0, 0),\n                scene\n            );\n            camera.fov = (60 * Math.PI) / 180;\n            camera.attachControl();\n            camera.minZ = cameraMin;\n            camera.maxZ = cameraMax;\n            camera.wheelPrecision = 50;\n            camera.inputs.removeByType(\"ArcRotateCameraKeyboardMoveInput\");\n\n            return camera;\n        };\n\n        const camera = createCamera();\n\n        scene.activeCamera = camera;\n\n        FluidSimulationDemoBase.AddDemo(\n            \"Particle system\",\n            () => new FluidSimulationDemoParticleSystem(scene)\n        );\n        FluidSimulationDemoBase.AddDemo(\n            \"Particle custom shape\",\n            () => new FluidSimulationDemoParticleCustomShape(scene)\n        );\n        FluidSimulationDemoBase.AddDemo(\n            \"Precomputed particles - rendering only\",\n            () => new FluidSimulationDemoPrecomputeRendering(scene)\n        );\n        FluidSimulationDemoBase.AddDemo(\n            \"Box, sphere and wall\",\n            () => new FluidSimulationDemoBoxSphere(scene)\n        );\n        FluidSimulationDemoBase.AddDemo(\n            \"Height map\",\n            () => new FluidSimulationDemoHeightMap(scene)\n        );\n        FluidSimulationDemoBase.AddDemo(\n            \"Glass\",\n            () => new FluidSimulationDemoGlass(scene)\n        );\n        FluidSimulationDemoBase.AddDemo(\n            \"Mesh SDF\",\n            () => new FluidSimulationDemoMeshSDF(scene)\n        );\n\n        FluidSimulationDemoBase.StartDemo(3);\n\n        return scene;\n    }\n}\n\nexport default new FluidRendering();\n","export default __webpack_public_path__ + \"370c162a33a228937af8f45b74b949f4.glb\";","import * as BABYLON from \"@babylonjs/core\";\n\nimport { FluidSimulationDemoBase } from \"./fluidSimulationDemoBase\";\n\n// Table from YouniqueĪdeaStudio (https://sketchfab.com/3d-models/simple-round-table-obj-6083c7dd80034ed5a6425a5fe7bcdf9a)\nimport tableScene from \"../assets/scenes/simple_round_table.glb\";\n\nexport class FluidSimulationDemoGlass extends FluidSimulationDemoBase {\n    private _boxMesh: BABYLON.Nullable<BABYLON.Mesh>;\n    private _boxMaterial: BABYLON.Nullable<BABYLON.PBRMaterial>;\n    private _cylMesh: BABYLON.Nullable<BABYLON.Mesh>;\n    private _cylMeshOfst: BABYLON.Vector3;\n    private _footMesh: BABYLON.Nullable<BABYLON.Mesh>;\n    private _footMeshOfst: BABYLON.Vector3;\n    private _sceneRenderObserver: BABYLON.Nullable<\n        BABYLON.Observer<BABYLON.Scene>\n    >;\n\n    constructor(scene: BABYLON.Scene) {\n        super(scene);\n\n        this._environmentFile = \"Country\";\n        this._sceneRenderObserver = null;\n        this._boxMesh = null;\n        this._boxMaterial = null;\n        this._cylMesh = null;\n        this._footMesh = null;\n\n        this.addCollisionVerticalCylinder(\n            new BABYLON.Vector3(0.0, -(1.9 + 0.04 - 0.2 + 0.15), 0.0),\n            new BABYLON.Vector3(0, 0, 0),\n            2.2,\n            0.12,\n            16,\n            null,\n            0.3,\n            true\n        );\n\n        this.addCollisionPlane(new BABYLON.Vector3(0, 1, 0), 6, 0.3);\n\n        this.addCollisionCutHollowSphere(\n            new BABYLON.Vector3(0.0, 0.2, 0.0),\n            new BABYLON.Vector3(0, 0, 0),\n            0.5,\n            0.2,\n            0.02,\n            16,\n            new BABYLON.Vector3(0, 1, 0)\n        );\n\n        this._footMeshOfst = new BABYLON.Vector3(0, -1.9, 0);\n        this.addCollisionVerticalCylinder(\n            new BABYLON.Vector3(0.0, -1.7 - 0.04 / 2, 0.0),\n            new BABYLON.Vector3(0, 0, 0),\n            0.4,\n            0.04,\n            16,\n            null,\n            0.6\n        );\n\n        this._cylMeshOfst = new BABYLON.Vector3(0, -1.2, 0);\n        this.addCollisionVerticalCylinder(\n            new BABYLON.Vector3(0.0, -1.0, 0.0),\n            new BABYLON.Vector3(0, 0, 0),\n            0.05,\n            1.4,\n            16,\n            null,\n            0.6\n        );\n    }\n\n    public async _run() {\n        // Get collision meshes\n        this._boxMesh = this._collisionObjects[2][0];\n        this._footMesh = this._collisionObjects[3][0];\n        this._cylMesh = this._collisionObjects[4][0];\n\n        // Reset camera\n        const camera =\n            this._scene.activeCameras?.[0] ?? this._scene.activeCamera;\n\n        if (camera) {\n            (camera as BABYLON.ArcRotateCamera).alpha = 3.09;\n            (camera as BABYLON.ArcRotateCamera).beta = 1.41;\n            (camera as BABYLON.ArcRotateCamera).radius = 6.42;\n        }\n\n        // Simulation parameters\n        this._fluidRenderObject.object.particleSize = 0.08;\n        this._fluidRenderObject.targetRenderer.fluidColor = new BABYLON.Color3(\n            251 / 255,\n            218 / 255,\n            218 / 255\n        );\n\n        this._fluidSim!.smoothingRadius = 0.04;\n        this._fluidSim!.densityReference = 20000;\n        this._fluidSim!.pressureConstant = 4;\n        this._fluidSim!.viscosity = 0.01;\n        this._fluidSim!.maxVelocity = 10;\n        this._fluidSim!.maxAcceleration = 2000;\n\n        this._shapeCollisionRestitution = 0.95;\n\n        this._particleGenerator!.position.x = 0.15;\n        this._particleGenerator!.position.y = 0.8;\n        this._particleGenerator!.position.z = -0.1;\n\n        // Create materials\n        this._boxMaterial = new BABYLON.PBRMaterial(\"BoxMeshMat\", this._scene);\n        this._boxMaterial.metallic = 0.3;\n        this._boxMaterial.roughness = 0;\n        this._boxMaterial.alpha = 0.2;\n        this._boxMaterial.backFaceCulling = false;\n\n        this._boxMesh!.material = this._boxMaterial;\n        this._cylMesh!.material = this._boxMaterial.clone(\"cloned\");\n        this._cylMesh!.material.alpha = 1;\n        this._footMesh!.material = this._cylMesh!.material;\n\n        this._sceneRenderObserver = this._scene.onBeforeRenderObservable.add(\n            () => {\n                this._cylMesh!.position.copyFrom(this._boxMesh!.position);\n                this._cylMesh!.position.addInPlace(this._cylMeshOfst);\n                this._footMesh!.position.copyFrom(this._boxMesh!.position);\n                this._footMesh!.position.addInPlace(this._footMeshOfst);\n            }\n        );\n\n        super._run();\n\n        await BABYLON.SceneLoader.AppendAsync(\"\", tableScene, this._scene);\n\n        const table = this._scene.getMeshByName(\"Object_3\")!;\n\n        table.scaling.setAll(6);\n        table.position.set(-2.3, -2, -5.54);\n    }\n\n    public dispose(): void {\n        super.dispose();\n\n        this._scene.onBeforeRenderObservable.remove(this._sceneRenderObserver);\n\n        this._scene.getMeshByName(\"__root__\")?.dispose(false, true);\n\n        this._boxMesh?.dispose();\n        this._boxMaterial?.dispose();\n        this._cylMesh?.material?.dispose();\n        this._cylMesh?.dispose();\n        this._footMesh?.dispose();\n    }\n\n    protected _makeGUIMainMenu(): void {\n        const params = {\n            restart: () => {\n                this._generateParticles();\n            },\n            boxOpacity: this._boxMaterial!.alpha,\n        };\n\n        const mainMenu = this._gui!;\n\n        mainMenu.add(params, \"restart\").name(\"Restart\");\n\n        mainMenu\n            .add(params, \"boxOpacity\", 0, 1, 0.01)\n            .name(\"Glass opacity\")\n            .onChange((value: any) => {\n                this._boxMaterial!.alpha = value;\n            });\n    }\n}\n","import * as BABYLON from \"@babylonjs/core\";\n\nimport { FluidSimulationDemoBase } from \"./fluidSimulationDemoBase\";\nimport { ParticleGenerator } from \"./Utils/particleGenerator\";\nimport { ICollisionShape } from \"./Utils/sdfHelper\";\n\nexport class FluidSimulationDemoHeightMap extends FluidSimulationDemoBase {\n    private _particleGeneratorName: string;\n    private _sphere: BABYLON.Nullable<BABYLON.Mesh>;\n    private _box: BABYLON.Nullable<BABYLON.Mesh>;\n    private _heightMap: [\n        BABYLON.Nullable<BABYLON.Mesh>,\n        BABYLON.Nullable<ICollisionShape>\n    ];\n    private _ground: BABYLON.Mesh;\n    private _groundCollision: ICollisionShape;\n    private _time: number;\n    private _showHeightmap: boolean;\n\n    constructor(scene: BABYLON.Scene) {\n        super(scene, false);\n\n        this._numParticles = 10000;\n        this._particleGeneratorName = \"Water jet\";\n        this._time = 0;\n        this._showHeightmap = true;\n        this._sphere = null;\n        this._box = null;\n        this._heightMap = [null, null];\n        this._groundCollision = null as any;\n\n        const terrainSize = 2.85;\n\n        this.addCollisionSphere(new BABYLON.Vector3(0, 0.2, 0), 0.2, null);\n        this.addCollisionBox(\n            new BABYLON.Vector3(-0.7, 0.249, -0.7),\n            new BABYLON.Vector3(0, 0, (90 * Math.PI) / 180),\n            new BABYLON.Vector3(0.2, 0.05, 0.5)\n        );\n\n        this.addCollisionTerrain(terrainSize);\n\n        this.addCollisionPlane(new BABYLON.Vector3(0, 0, -1), terrainSize / 2);\n        this.addCollisionPlane(new BABYLON.Vector3(0, 0, 1), terrainSize / 2);\n        this.addCollisionPlane(new BABYLON.Vector3(1, 0, 0), terrainSize / 2);\n        this.addCollisionPlane(new BABYLON.Vector3(-1, 0, 0), terrainSize / 2);\n        this.addCollisionPlane(new BABYLON.Vector3(0, 1, 0), 0);\n\n        this._ground = BABYLON.MeshBuilder.CreateGround(\n            \"ground\",\n            { width: terrainSize, height: terrainSize },\n            this._scene\n        );\n        this._ground.setEnabled(false);\n    }\n\n    public async _run() {\n        // Get collision meshes\n        this._sphere = this._collisionObjects[0][0];\n        this._box = this._collisionObjects[1][0];\n        this._heightMap = this._collisionObjects[2];\n        this._groundCollision = this._collisionObjects[7][1];\n\n        this._groundCollision.disabled = true;\n        this._ground.material = this._heightMap[0]!.material;\n\n        const camera =\n            this._scene.activeCameras?.[0] ?? this._scene.activeCamera;\n\n        if (camera) {\n            (camera as BABYLON.ArcRotateCamera).alpha = 4.65;\n            (camera as BABYLON.ArcRotateCamera).beta = 1.12;\n            (camera as BABYLON.ArcRotateCamera).radius = 3.9;\n        }\n\n        this._fluidRenderObject.targetRenderer.blurThicknessFilterSize = 12;\n        this._fluidRenderObject.targetRenderer.blurThicknessNumIterations = 3;\n        this._fluidRenderObject.targetRenderer.specularPower = 50;\n        this._fluidRenderObject.targetRenderer.refractionStrength = 0.02;\n        this._fluidRenderObject.targetRenderer.density = 5;\n\n        this._createParticleGenerator();\n\n        super._run();\n    }\n\n    private _createParticleGenerator(): void {\n        this._particleGenerator?.dispose();\n\n        let particleSize = \"\";\n\n        switch (this._particleGeneratorName) {\n            case \"Water jet\":\n                this._fluidRenderObject.object.particleSize = 0.08;\n\n                this._fluidSim!.smoothingRadius = 0.04;\n                this._fluidSim!.densityReference = 20000;\n                this._fluidSim!.pressureConstant = 3;\n                this._fluidSim!.viscosity = 0.01;\n                this._fluidSim!.maxVelocity = 3;\n                this._fluidSim!.maxAcceleration = 2000;\n                break;\n            case \"Dragon 0.04\":\n            case \"Dude 0.04\":\n            case \"Sphere 0.04\":\n                this._fluidRenderObject.object.particleSize = 0.08;\n\n                this._fluidSim!.smoothingRadius = 0.08;\n                this._fluidSim!.densityReference = 6000;\n                this._fluidSim!.pressureConstant = 10;\n                this._fluidSim!.viscosity = 0.01;\n                this._fluidSim!.maxVelocity = 4;\n                this._fluidSim!.maxAcceleration = 2000;\n\n                particleSize = \"04\";\n                break;\n            case \"Dragon 0.03\":\n            case \"Dude 0.03\":\n            case \"Sphere 0.03\":\n                this._fluidRenderObject.object.particleSize = 0.06;\n\n                this._fluidSim!.smoothingRadius = 0.06;\n                this._fluidSim!.densityReference = 17000;\n                this._fluidSim!.pressureConstant = 15;\n                this._fluidSim!.viscosity = 0.01;\n                this._fluidSim!.maxVelocity = 4;\n                this._fluidSim!.maxAcceleration = 2000;\n\n                particleSize = \"03\";\n                break;\n        }\n\n        this._fluidRendererGUI?.syncGUI();\n        this._syncFluidSimGUI();\n\n        this._particleGenerator = new ParticleGenerator(\n            this._scene,\n            particleSize === \"\"\n                ? undefined\n                : this._particleGeneratorName\n                      .substring(0, this._particleGeneratorName.indexOf(\" \"))\n                      .toLocaleLowerCase() +\n                  \"_\" +\n                  particleSize\n        );\n\n        this._particleGenerator!.position.y = 2;\n        this._particleGenerator!.position.z = 0.3;\n        this._particleGenerator.particleRadius =\n            this._fluidSim!.smoothingRadius / 2;\n    }\n\n    public dispose() {\n        super.dispose();\n\n        this._ground.dispose();\n    }\n\n    protected _makeGUIMainMenu(): void {\n        const params = {\n            restart: () => {\n                this._generateParticles();\n            },\n            particleGeneratorName: this._particleGeneratorName,\n            showHeightmap: this._showHeightmap,\n        };\n\n        const mainMenu = this._gui!;\n\n        mainMenu.add(params, \"restart\").name(\"Restart\");\n\n        mainMenu\n            .add(params, \"particleGeneratorName\", [\n                \"Water jet\",\n                \"Dragon 0.04\",\n                \"Dude 0.04\",\n                \"Sphere 0.04\",\n                \"Dragon 0.03\",\n                \"Dude 0.03\",\n                \"Sphere 0.03\",\n            ])\n            .name(\"Particle generator\")\n            .onChange(async (value: any) => {\n                this._particleGeneratorName = value;\n                this._createParticleGenerator();\n                await this._generateParticles();\n                if (value !== \"Water jet\") {\n                    this._numParticles =\n                        this._particleGenerator!.currNumParticles;\n                }\n                this._syncFluidSimGUI();\n            });\n\n        mainMenu\n            .add(params, \"showHeightmap\")\n            .name(\"Show height map\")\n            .onChange((value: boolean) => {\n                this._showHeightmap = value;\n                this._ground.setEnabled(!value);\n                this._groundCollision.disabled = value;\n                this._heightMap[0]!.setEnabled(value);\n                this._heightMap[1]!.disabled = !value;\n            });\n    }\n\n    protected _checkCollisions(particleRadius: number): void {\n        this._sphere!.position.x = Math.cos((2 * this._time) / 3.3) * 1.1;\n        this._sphere!.position.z = Math.sin((5 * this._time) / 3.3) * 1.1;\n\n        this._box!.rotation.y = this._time * 2;\n\n        this._time += 0.02;\n\n        super._checkCollisions(particleRadius);\n    }\n}\n","import * as BABYLON from \"@babylonjs/core\";\n//import * as BABYLONSER from \"@babylonjs/serializers\";\n\nimport { FluidSimulationDemoBase } from \"./fluidSimulationDemoBase\";\n\n// High heels model by cebraVFX found on Sketchfab (https://sketchfab.com/3d-models/high-heels-1561c09fc45349d680e48e3e007b64e0)\nexport class FluidSimulationDemoMeshSDF extends FluidSimulationDemoBase {\n    private _sceneRenderObserver: BABYLON.Nullable<\n        BABYLON.Observer<BABYLON.Scene>\n    >;\n    private _meshName: string;\n\n    constructor(scene: BABYLON.Scene) {\n        super(scene);\n\n        this._environmentFile = \"Parking\";\n        this._meshName = null as any;\n\n        this._sceneRenderObserver = null;\n        this._numParticles = 7500;\n\n        this.addCollisionPlane(new BABYLON.Vector3(0, 1, 0), 0.5, 0.3);\n\n        this._addMesh(\"High heels\");\n    }\n\n    protected async _addMesh(name: string, waitForReadiness = false) {\n        this._meshName = name;\n\n        switch (name) {\n            case \"High heels\":\n                this.addCollisionMesh(\n                    new BABYLON.Vector3(0.85, -0.5, 0),\n                    new BABYLON.Vector3(0, 0, 0),\n                    \"high_heels.obj\",\n                    \"high_heels.sdf\",\n                    false,\n                    0.03\n                );\n                break;\n            case \"Dragon\":\n                this.addCollisionMesh(\n                    new BABYLON.Vector3(-0.1, -0.5, -2.4),\n                    new BABYLON.Vector3(0, -1.0, 0),\n                    \"Dragon_50k.obj\",\n                    \"Dragon_50k.sdf\",\n                    true,\n                    3\n                );\n                break;\n        }\n\n        if (waitForReadiness) {\n            this._collisionObjects = await Promise.all(\n                this._collisionObjectPromises\n            );\n        }\n    }\n\n    public async _run() {\n        /*for (let i = 2; i <= 17; ++i) {\n            const m = this._scene.meshes[i] as BABYLON.Mesh;\n            m.bakeCurrentTransformIntoVertices();\n            m.parent = null;\n            m.scaling.setAll(10);\n            m.bakeCurrentTransformIntoVertices();\n        }\n\n        const mm = BABYLON.Mesh.MergeMeshes([\n            this._scene.meshes[2] as BABYLON.Mesh,\n            this._scene.meshes[3] as BABYLON.Mesh,\n            this._scene.meshes[4] as BABYLON.Mesh,\n            this._scene.meshes[5] as BABYLON.Mesh,\n            this._scene.meshes[6] as BABYLON.Mesh,\n            this._scene.meshes[7] as BABYLON.Mesh,\n            this._scene.meshes[8] as BABYLON.Mesh,\n            this._scene.meshes[9] as BABYLON.Mesh,\n            this._scene.meshes[10] as BABYLON.Mesh,\n            this._scene.meshes[11] as BABYLON.Mesh,\n            this._scene.meshes[12] as BABYLON.Mesh,\n            this._scene.meshes[13] as BABYLON.Mesh,\n            this._scene.meshes[14] as BABYLON.Mesh,\n            this._scene.meshes[15] as BABYLON.Mesh,\n            this._scene.meshes[16] as BABYLON.Mesh,\n            this._scene.meshes[17] as BABYLON.Mesh,\n        ], false, true, undefined, false, false);\n\n        console.log(BABYLONSER.OBJExport.OBJ([mm!]));\n\n        mm?.dispose();*/\n\n        // Reset camera\n        const camera =\n            this._scene.activeCameras?.[0] ?? this._scene.activeCamera;\n\n        if (camera) {\n            (camera as BABYLON.ArcRotateCamera).alpha = 2.62;\n            (camera as BABYLON.ArcRotateCamera).beta = 1.11;\n            (camera as BABYLON.ArcRotateCamera).radius = 8.4;\n        }\n\n        // Simulation parameters\n        this._fluidRenderObject.object.particleSize = 0.08;\n\n        this._fluidSim!.smoothingRadius = 0.04;\n        this._fluidSim!.densityReference = 20000;\n        this._fluidSim!.pressureConstant = 4;\n        this._fluidSim!.viscosity = 0.005;\n        this._fluidSim!.maxVelocity = 10;\n        this._fluidSim!.maxAcceleration = 2000;\n\n        this._shapeCollisionRestitution = 0.99;\n\n        this._particleGenerator!.position.x = 0.2;\n        this._particleGenerator!.position.y = 2.8;\n        this._particleGenerator!.position.z = -1.5;\n\n        super._run();\n    }\n\n    public dispose(): void {\n        super.dispose();\n\n        this._scene.onBeforeRenderObservable.remove(this._sceneRenderObserver);\n    }\n\n    protected _makeGUIMainMenu(): void {\n        const params = {\n            restart: () => {\n                this._generateParticles();\n            },\n            meshname: this._meshName,\n        };\n\n        const mainMenu = this._gui!;\n\n        mainMenu.add(params, \"restart\").name(\"Restart\");\n\n        mainMenu\n            .add(params, \"meshname\", [\"Dragon\", \"High heels\"])\n            .name(\"Name\")\n            .onChange((value: any) => {\n                this.disposeCollisionObject(this._collisionObjects.length - 1);\n                this._addMesh(value, true);\n            });\n    }\n}\n","import * as BABYLON from \"@babylonjs/core\";\n//import * as BABYLONSER from \"@babylonjs/serializers\";\n\nimport { FluidSimulationDemoBase } from \"./fluidSimulationDemoBase\";\nimport { FluidRenderingObjectVertexBuffer } from \"./FluidRenderer/fluidRenderingObjectVertexBuffer\";\n\nexport class FluidSimulationDemoParticleCustomShape extends FluidSimulationDemoBase {\n    private _initParticles: boolean;\n    private _started: boolean;\n    private _meshPCS: BABYLON.Nullable<BABYLON.Mesh>;\n    private _pcs: BABYLON.Nullable<BABYLON.PointsCloudSystem>;\n\n    constructor(scene: BABYLON.Scene) {\n        super(scene, true);\n\n        this._initParticles = true;\n        this._started = false;\n        this._meshPCS = null;\n        this._pcs = null;\n    }\n\n    protected async _run() {\n        const camera =\n            this._scene.activeCameras?.[0] ?? this._scene.activeCamera;\n\n        if (camera) {\n            (camera as BABYLON.ArcRotateCamera).alpha = 1.593 - Math.PI / 8;\n            (camera as BABYLON.ArcRotateCamera).beta = 1.3;\n            (camera as BABYLON.ArcRotateCamera).radius = 9.633;\n            (camera as BABYLON.ArcRotateCamera).computeWorldMatrix();\n            (camera as BABYLON.ArcRotateCamera).setTarget(\n                new BABYLON.Vector3(0, 3, 0)\n            );\n            (camera as BABYLON.ArcRotateCamera).beta = 1.3;\n            (camera as BABYLON.ArcRotateCamera).computeWorldMatrix();\n        }\n\n        await BABYLON.SceneLoader.AppendAsync(\n            \"https://assets.babylonjs.com/meshes/Dude/\",\n            \"dude.babylon\",\n            this._scene\n        );\n\n        this._scene.getCameraByName(\"Default camera\")?.dispose();\n\n        if (this._scene.activeCameras && this._scene.activeCameras.length > 0) {\n            this._scene.activeCameras[0] = camera!;\n        } else {\n            this._scene.activeCamera = camera;\n        }\n\n        this._pcs = new BABYLON.PointsCloudSystem(\"pcs\", 3, this._scene);\n\n        this._scene\n            .getMeshByName(\"him\")!\n            .getChildMeshes()\n            .forEach((m) => {\n                m.setEnabled(false);\n                m.scaling.setAll(0.1);\n                m.rotation.y = Math.PI / 8;\n                //m.rotation.y = Math.PI;\n                //(m as BABYLON.Mesh).bakeCurrentTransformIntoVertices();\n                (m.material as any).disableLighting = true;\n                (m.material as any).emissiveTexture = (\n                    m.material as any\n                ).diffuseTexture;\n                this._pcs!.addSurfacePoints(\n                    m as BABYLON.Mesh,\n                    5000,\n                    BABYLON.PointColor.Color,\n                    0\n                );\n            });\n\n        /*this._scene.useRightHandedSystem = true;\n        console.log(BABYLONSER.OBJExport.OBJ(this._scene.getMeshByName(\"him\")!.getChildMeshes()));\n        this._scene.useRightHandedSystem = false;*/\n\n        this._meshPCS = await this._pcs.buildMeshAsync();\n\n        this._meshPCS.setEnabled(false);\n\n        const positions: Float32Array = this._pcs.positions;\n        const origPositions = positions.slice(0);\n        const numParticles = positions.length / 3;\n\n        this._fluidRenderObject.object.vertexBuffers[\"position\"] =\n            new BABYLON.VertexBuffer(\n                this._engine,\n                positions,\n                BABYLON.VertexBuffer.PositionKind,\n                true,\n                false,\n                3,\n                true\n            );\n        this._fluidRenderObject.object.vertexBuffers[\"color\"] =\n            new BABYLON.VertexBuffer(\n                this._engine,\n                this._pcs.colors,\n                \"color\",\n                false,\n                false,\n                4,\n                true\n            );\n\n        (\n            this._fluidRenderObject.object as FluidRenderingObjectVertexBuffer\n        ).setNumParticles(numParticles);\n\n        this._fluidRenderObject.object.particleSize = 0.15;\n        this._fluidRenderObject.object.particleThicknessAlpha = 0.1;\n        this._fluidRenderObject.targetRenderer.minimumThickness = 0;\n        this._fluidRenderObject.targetRenderer.blurDepthFilterSize = 15;\n        this._fluidRenderObject.targetRenderer.blurDepthNumIterations = 8;\n        this._fluidRenderObject.targetRenderer.blurDepthDepthScale = 50;\n        this._fluidRenderObject.targetRenderer.thicknessMapSize = 1024;\n        this._fluidRenderObject.targetRenderer.density = 4.03;\n        this._fluidRenderObject.targetRenderer.generateDiffuseTexture = true;\n        this._fluidRenderObject.targetRenderer.fresnelClamp = 0.1;\n\n        const velocity: number[] = [];\n        const accel: number[] = [];\n        const stopped: number[] = [];\n\n        const initParticles = () => {\n            const min = new BABYLON.Vector3(1e10, 1e10, 1e10),\n                max = new BABYLON.Vector3(-1e10, -1e10, -1e10);\n            for (let i = 0; i < numParticles; ++i) {\n                min.x = Math.min(positions[i * 3 + 0], min.x);\n                min.y = Math.min(positions[i * 3 + 1], min.y);\n                min.z = Math.min(positions[i * 3 + 2], min.z);\n                max.x = Math.max(positions[i * 3 + 0], max.x);\n                max.y = Math.max(positions[i * 3 + 1], max.y);\n                max.z = Math.max(positions[i * 3 + 2], max.z);\n            }\n\n            velocity.length = 0;\n            accel.length = 0;\n            stopped.length = 0;\n\n            for (let i = 0; i < numParticles; ++i) {\n                const f = Math.random() * 0.005;\n                const g = Math.random() * 0.001;\n                const h = Math.random() * 0.005;\n\n                accel.push((-0.5 + Math.random()) * Math.random() * f);\n                accel.push(Math.random() * (Math.random() + 1.0) * g);\n                accel.push((-0.5 + Math.random()) * Math.random() * h);\n\n                velocity.push(0, 0, 0);\n\n                stopped.push(0);\n            }\n\n            this._initParticles = false;\n        };\n\n        const dt = 1 / 60 / 1000;\n        this._sceneObserver = this._scene.onBeforeRenderObservable.add(() => {\n            if (!this._started) {\n                return;\n            }\n\n            if (this._initParticles) {\n                positions.set(origPositions);\n                initParticles();\n                this._fluidRenderObject.object.vertexBuffers[\n                    \"position\"\n                ].updateDirectly(positions, 0);\n            }\n\n            if (this._paused) {\n                return;\n            }\n\n            let numStopped = 0;\n            for (let i = 0; i < numParticles; ++i) {\n                if (stopped[i]) {\n                    numStopped++;\n                    continue;\n                }\n                accel[i * 3 + 1] += -9.81 * dt;\n                velocity[i * 3 + 0] += accel[i * 3 + 0];\n                velocity[i * 3 + 1] += accel[i * 3 + 1];\n                velocity[i * 3 + 2] += accel[i * 3 + 2];\n                positions[i * 3 + 0] += velocity[i * 3 + 0];\n                positions[i * 3 + 1] += velocity[i * 3 + 1];\n                positions[i * 3 + 2] += velocity[i * 3 + 2];\n                if (positions[i * 3 + 1] <= -2) {\n                    //velocity[i * 3 + 0] *= Math.random() / 10 + 0.8;\n                    velocity[i * 3 + 1] *= -(Math.random() / 10 + 0.4);\n                    //velocity[i * 3 + 2] *= Math.random() / 10 + 0.8;\n                    if (positions[i * 3 + 1] + velocity[i * 3 + 1] < -2) {\n                        stopped[i] = 1;\n                    }\n                    positions[i * 3 + 1] = -2;\n                }\n            }\n\n            this._started == numStopped < numParticles;\n\n            this._fluidRenderObject.object.vertexBuffers[\n                \"position\"\n            ].updateDirectly(positions, 0);\n        });\n\n        super._run();\n    }\n\n    public dispose() {\n        super.dispose();\n\n        this._scene.getMeshByName(\"him\")!.dispose(false, true);\n        /*this._scene.getMeshByName(\"him\")!.getChildMeshes().forEach((m) => {\n            m.dispose();\n        });*/\n\n        this._pcs?.dispose();\n    }\n\n    protected _makeGUIMainMenu(): void {\n        const params = {\n            paused: this._paused,\n            start: () => {\n                this._initParticles = true;\n                this._started = true;\n            },\n        };\n\n        const mainMenu = this._gui!;\n\n        mainMenu.add(params, \"start\").name(\"Start\");\n\n        mainMenu\n            .add(params, \"paused\")\n            .name(\"Pause\")\n            .onChange((value: boolean) => {\n                this._paused = value;\n            });\n    }\n}\n","export default __webpack_public_path__ + \"7c78419fe3f98a530df81b3e7a40909f.png\";","import * as BABYLON from \"@babylonjs/core\";\n\nimport { FluidSimulationDemoBase } from \"./fluidSimulationDemoBase\";\nimport { FluidRenderingObjectParticleSystem } from \"./FluidRenderer/fluidRenderingObjectParticleSystem\";\n\nimport flareImg from \"../assets/pictures/flare32bits.png\";\n\nexport class FluidSimulationDemoParticleSystem extends FluidSimulationDemoBase {\n    private _particleSystem: BABYLON.Nullable<BABYLON.ParticleSystem>;\n\n    constructor(scene: BABYLON.Scene) {\n        super(scene, true);\n\n        this._particleSystem = null;\n    }\n\n    protected async _run() {\n        const camera =\n            this._scene.activeCameras?.[0] ?? this._scene.activeCamera;\n\n        if (camera) {\n            (camera as BABYLON.ArcRotateCamera).alpha = 0;\n            (camera as BABYLON.ArcRotateCamera).beta = Math.PI / 2.4;\n            (camera as BABYLON.ArcRotateCamera).radius = 30;\n        }\n\n        const numParticles = 20000 * 2;\n        const numParticlesEmitRate = 1500 * 2;\n\n        // Create a particle system\n        this._particleSystem = new BABYLON.ParticleSystem(\n            \"particles\",\n            numParticles,\n            this._scene\n        );\n\n        //Texture of each particle\n        this._particleSystem.particleTexture = new BABYLON.Texture(\n            flareImg,\n            this._scene\n        );\n        this._particleSystem.blendMode = BABYLON.ParticleSystem.BLENDMODE_ADD;\n\n        // Where the particles come from\n        this._particleSystem.createConeEmitter(4, Math.PI / 2);\n\n        // Colors of all particles\n        this._particleSystem.color1 = new BABYLON.Color4(0.4, 1.5, 0.3, 1.0);\n        this._particleSystem.color2 = new BABYLON.Color4(0.4, 1.5, 0.3, 1.0);\n        this._particleSystem.colorDead = new BABYLON.Color4(0, 0, 0.2, 0.0);\n        this._particleSystem.colorDead = new BABYLON.Color4(0.4, 1.0, 0.3, 1.0);\n\n        // Size of each particle (random between...\n        this._particleSystem.minSize = 0.5 * 1.5;\n        this._particleSystem.maxSize = 0.5 * 1.5;\n\n        // Life time of each particle (random between...\n        this._particleSystem.minLifeTime = 2.0;\n        this._particleSystem.maxLifeTime = 2.5;\n\n        // Emission rate\n        this._particleSystem.emitRate = numParticlesEmitRate;\n\n        // Set the gravity of all particles\n        this._particleSystem.gravity = new BABYLON.Vector3(0, -10.81, 0);\n\n        // Speed\n        this._particleSystem.minEmitPower = 2.5;\n        this._particleSystem.maxEmitPower = 6.5;\n        this._particleSystem.updateSpeed = 0.02;\n\n        // Start the particle system\n        this._particleSystem.preWarmCycles = 60 * 8;\n\n        this._particleSystem.start();\n\n        this._particleSystem.renderAsFluid = true;\n\n        this._fluidRenderer.removeRenderObject(this._fluidRenderObject, true);\n\n        this._fluidRenderObject =\n            this._fluidRenderer!.getRenderObjectFromParticleSystem(\n                this._particleSystem\n            )!;\n\n        this._fluidRenderObject.object.particleSize = 0.75;\n        this._fluidRenderObject.object.particleThicknessAlpha = 0.02;\n        (\n            this._fluidRenderObject.object as FluidRenderingObjectParticleSystem\n        ).useTrueRenderingForDiffuseTexture = true;\n        this._fluidRenderObject.targetRenderer.minimumThickness =\n            this._fluidRenderObject.object.particleThicknessAlpha;\n        this._fluidRenderObject.targetRenderer.blurDepthFilterSize = 10;\n        this._fluidRenderObject.targetRenderer.blurDepthDepthScale = 10;\n        this._fluidRenderObject.targetRenderer.thicknessMapSize = 1024;\n        this._fluidRenderObject.targetRenderer.density = 8;\n        this._fluidRenderObject.targetRenderer.fresnelClamp = 0.04;\n        this._fluidRenderObject.targetRenderer.fluidColor = new BABYLON.Color3(\n            219 / 255,\n            228 / 255,\n            1\n        );\n        this._fluidRenderObject.targetRenderer.generateDiffuseTexture = false;\n\n        super._run();\n    }\n\n    public dispose() {\n        super.dispose();\n\n        this._particleSystem?.dispose();\n    }\n\n    protected _makeGUIMainMenu(): void {\n        const params = {\n            paused: false,\n        };\n\n        const mainMenu = this._gui!;\n\n        mainMenu\n            .add(params, \"paused\")\n            .name(\"Pause\")\n            .onChange((value: boolean) => {\n                this._particleSystem!.updateSpeed = value ? 0 : 0.02;\n            });\n    }\n}\n","import * as BABYLON from \"@babylonjs/core\";\nimport { FluidRenderingObjectVertexBuffer } from \"./FluidRenderer/fluidRenderingObjectVertexBuffer\";\n\nimport { FluidSimulationDemoBase } from \"./fluidSimulationDemoBase\";\n\n// Pre-computed frames come from https://github.com/ttnghia/RealTimeFluidRendering/releases/tag/Datasets\nexport class FluidSimulationDemoPrecomputeRendering extends FluidSimulationDemoBase {\n    private _animSpeed: number;\n\n    constructor(scene: BABYLON.Scene) {\n        super(scene, true);\n\n        this._animSpeed = 0.5;\n    }\n\n    protected async _run() {\n        const camera =\n            this._scene.activeCameras?.[0] ?? this._scene.activeCamera;\n\n        if (camera) {\n            (camera as BABYLON.ArcRotateCamera).alpha = -0.631;\n            (camera as BABYLON.ArcRotateCamera).beta = 1.318;\n            (camera as BABYLON.ArcRotateCamera).radius = 1.866;\n        }\n\n        const numFrames = 160;\n        const positionBuffers: Array<Float32Array> = [];\n\n        let numParticles = 0;\n        //let particleRadius = 0;\n\n        for (let i = 0; i < numFrames; ++i) {\n            const num = \"000\" + (i + 1);\n            const buffer = await (\n                await fetch(\n                    \"/assets/particles/SphereDropGround/frame.\" +\n                        num.substring(num.length - 4) +\n                        \".pos\"\n                )\n            ).arrayBuffer();\n            const buffer32 = new Uint32Array(buffer);\n            const bufferFloat = new Float32Array(buffer);\n\n            numParticles = buffer32[0];\n            //particleRadius = bufferFloat[1];\n\n            const positions = new Float32Array(numParticles * 3);\n\n            for (let i = 0; i < numParticles; ++i) {\n                const x = bufferFloat[2 + i * 3 + 0];\n                const y = bufferFloat[2 + i * 3 + 1];\n                const z = bufferFloat[2 + i * 3 + 2];\n\n                positions[i * 3 + 0] = x;\n                positions[i * 3 + 1] = y;\n                positions[i * 3 + 2] = -z;\n            }\n\n            positionBuffers.push(positions);\n        }\n\n        this._fluidRenderObject.object.vertexBuffers[\"position\"] =\n            new BABYLON.VertexBuffer(\n                this._engine,\n                positionBuffers[0],\n                BABYLON.VertexBuffer.PositionKind,\n                true,\n                false,\n                3,\n                true\n            );\n\n        (\n            this._fluidRenderObject.object as FluidRenderingObjectVertexBuffer\n        ).setNumParticles(numParticles);\n\n        this._fluidRenderObject.object.particleSize = 0.03;\n        this._fluidRenderObject.object.particleThicknessAlpha = 0.007;\n        this._fluidRenderObject.targetRenderer.minimumThickness = 0;\n        this._fluidRenderObject.targetRenderer.blurDepthFilterSize = 10;\n        this._fluidRenderObject.targetRenderer.blurDepthDepthScale = 10;\n        this._fluidRenderObject.targetRenderer.thicknessMapSize = 256;\n        this._fluidRenderObject.targetRenderer.refractionStrength = 0.1;\n        this._fluidRenderObject.targetRenderer.blurThicknessFilterSize = 5;\n        this._fluidRenderObject.targetRenderer.blurThicknessNumIterations = 1;\n        this._fluidRenderObject.targetRenderer.density = 3;\n        this._fluidRenderObject.targetRenderer.specularPower = 250;\n\n        let t = 0;\n\n        this._sceneObserver = this._scene.onBeforeRenderObservable.add(() => {\n            this._fluidRenderObject.object.vertexBuffers[\n                \"position\"\n            ].updateDirectly(positionBuffers[Math.floor(t)], 0);\n            t += this._animSpeed;\n            if (t >= numFrames) {\n                t = 0;\n            }\n        });\n\n        super._run();\n    }\n\n    protected _makeGUIMainMenu(): void {\n        const params = {\n            animSpeed: this._animSpeed,\n        };\n\n        const mainMenu = this._gui!;\n\n        mainMenu\n            .add(params, \"animSpeed\", 0, 1, 0.1)\n            .name(\"Animation speed\")\n            .onChange((value: any) => {\n                this._animSpeed = value;\n            });\n    }\n}\n"],"names":["NAME_FLUIDRENDERER","Object","defineProperty","get","this","_fluidRenderer","set","value","enumerable","configurable","FluidRenderer","dispose","FluidRendererSceneComponent","constructor","scene","name","register","_gatherActiveCameraRenderTargetsStage","registerStep","_gatherActiveCameraRenderTargets","_afterCameraDrawStage","_afterCameraDraw","fluidRenderer","_prepareRendering","camera","_render","rebuild","disableFluidRenderer","enableFluidRenderer","component","_getComponent","_addComponent","FluidRendering","_scene","async","engine","canvas","window","BABYLON","fov","Math","PI","attachControl","minZ","maxZ","wheelPrecision","inputs","removeByType","createCamera","activeCamera","FluidSimulationDemoBase","FluidSimulationDemoParticleSystem","FluidSimulationDemoParticleCustomShape","FluidSimulationDemoPrecomputeRendering","FluidSimulationDemoBoxSphere","FluidSimulationDemoHeightMap","FluidSimulationDemoGlass","FluidSimulationDemoMeshSDF","super","_environmentFile","_sceneRenderObserver","_boxMesh","_boxMaterial","_cylMesh","_footMesh","addCollisionVerticalCylinder","addCollisionPlane","addCollisionCutHollowSphere","_footMeshOfst","_cylMeshOfst","_collisionObjects","activeCameras","alpha","beta","radius","_fluidRenderObject","object","particleSize","targetRenderer","fluidColor","_fluidSim","smoothingRadius","densityReference","pressureConstant","viscosity","maxVelocity","maxAcceleration","_shapeCollisionRestitution","_particleGenerator","position","x","y","z","metallic","roughness","backFaceCulling","material","clone","onBeforeRenderObservable","add","copyFrom","addInPlace","_run","table","getMeshByName","scaling","setAll","remove","_makeGUIMainMenu","params","restart","_generateParticles","boxOpacity","mainMenu","_gui","onChange","_numParticles","_particleGeneratorName","_time","_showHeightmap","_sphere","_box","_heightMap","_groundCollision","terrainSize","addCollisionSphere","addCollisionBox","addCollisionTerrain","_ground","width","height","setEnabled","disabled","blurThicknessFilterSize","blurThicknessNumIterations","specularPower","refractionStrength","density","_createParticleGenerator","_fluidRendererGUI","syncGUI","_syncFluidSimGUI","ParticleGenerator","undefined","substring","indexOf","toLocaleLowerCase","particleRadius","particleGeneratorName","showHeightmap","currNumParticles","_checkCollisions","cos","sin","rotation","_meshName","_addMesh","waitForReadiness","addCollisionMesh","Promise","all","_collisionObjectPromises","meshname","disposeCollisionObject","length","_initParticles","_started","_meshPCS","_pcs","computeWorldMatrix","setTarget","getCameraByName","getChildMeshes","forEach","m","disableLighting","emissiveTexture","diffuseTexture","addSurfacePoints","buildMeshAsync","positions","origPositions","slice","numParticles","vertexBuffers","_engine","colors","setNumParticles","particleThicknessAlpha","minimumThickness","blurDepthFilterSize","blurDepthNumIterations","blurDepthDepthScale","thicknessMapSize","generateDiffuseTexture","fresnelClamp","velocity","accel","stopped","initParticles","min","max","i","f","random","g","h","push","_sceneObserver","updateDirectly","_paused","paused","start","_particleSystem","particleTexture","blendMode","createConeEmitter","color1","color2","colorDead","minSize","maxSize","minLifeTime","maxLifeTime","emitRate","gravity","minEmitPower","maxEmitPower","updateSpeed","preWarmCycles","renderAsFluid","removeRenderObject","getRenderObjectFromParticleSystem","useTrueRenderingForDiffuseTexture","_animSpeed","positionBuffers","num","buffer","fetch","arrayBuffer","buffer32","Uint32Array","bufferFloat","Float32Array","t","floor","animSpeed"],"sourceRoot":""}