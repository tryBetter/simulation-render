{"version":3,"file":"553.4449a47b4c5e6dbce02e.js","mappings":"yNAMO,MAAMA,UAA+C,EAAAC,wBAGxDC,YAAYC,GACRC,MAAMD,GAAO,GAEbE,KAAKC,WAAa,EACtB,CAEUC,a,QACN,MAAMC,EAC4B,QAA9B,EAAyB,QAAzB,EAAAH,KAAKI,OAAOC,qBAAa,eAAG,UAAE,QAAIL,KAAKI,OAAOE,aAE9CH,IACCA,EAAmCI,OAAS,KAC5CJ,EAAmCK,KAAO,MAC1CL,EAAmCM,OAAS,OAGjD,MACMC,EAAuC,GAE7C,IAAIC,EAAe,EAGnB,IAAK,IAAIC,EAAI,EAAGA,EANE,MAMeA,EAAG,CAChC,MAAMC,EAAM,OAASD,EAAI,GACnBE,cACIC,MACF,4CACIF,EAAIG,UAAUH,EAAII,OAAS,GAC3B,SAEVC,cACIC,EAAW,IAAIC,YAAYN,GAC3BO,EAAc,IAAIC,aAAaR,GAErCH,EAAeQ,EAAS,GAGxB,MAAMI,EAAY,IAAID,aAA4B,EAAfX,GAEnC,IAAK,IAAIC,EAAI,EAAGA,EAAID,IAAgBC,EAAG,CACnC,MAAMY,EAAIH,EAAY,EAAQ,EAAJT,EAAQ,GAC5Ba,EAAIJ,EAAY,EAAQ,EAAJT,EAAQ,GAC5Bc,EAAIL,EAAY,EAAQ,EAAJT,EAAQ,GAElCW,EAAc,EAAJX,EAAQ,GAAKY,EACvBD,EAAc,EAAJX,EAAQ,GAAKa,EACvBF,EAAc,EAAJX,EAAQ,IAAMc,C,CAG5BhB,EAAgBiB,KAAKJ,E,CAGzBvB,KAAK4B,mBAAmBC,OAAOC,cAAwB,SACnD,IAAI,eACA9B,KAAK+B,QACLrB,EAAgB,GAChB,6BACA,GACA,EACA,GACA,GAIJV,KAAK4B,mBAAmBC,OAC1BG,gBAAgBrB,GAElBX,KAAK4B,mBAAmBC,OAAOI,aAAe,IAC9CjC,KAAK4B,mBAAmBC,OAAOK,uBAAyB,KACxDlC,KAAK4B,mBAAmBO,eAAeC,iBAAmB,EAC1DpC,KAAK4B,mBAAmBO,eAAeE,oBAAsB,GAC7DrC,KAAK4B,mBAAmBO,eAAeG,oBAAsB,GAC7DtC,KAAK4B,mBAAmBO,eAAeI,iBAAmB,IAC1DvC,KAAK4B,mBAAmBO,eAAeK,mBAAqB,GAC5DxC,KAAK4B,mBAAmBO,eAAeM,wBAA0B,EACjEzC,KAAK4B,mBAAmBO,eAAeO,2BAA6B,EACpE1C,KAAK4B,mBAAmBO,eAAeQ,QAAU,EACjD3C,KAAK4B,mBAAmBO,eAAeS,cAAgB,IAEvD,IAAIC,EAAI,EAER7C,KAAK8C,eAAiB9C,KAAKI,OAAO2C,yBAAyBC,KAAI,KAC3DhD,KAAK4B,mBAAmBC,OAAOC,cACjB,SACZmB,eAAevC,EAAgBwC,KAAKC,MAAMN,IAAK,GACjDA,GAAK7C,KAAKC,WACN4C,GAtEU,MAuEVA,EAAI,E,IAIZ9C,MAAMqD,MACV,CAEUC,mBACN,MAAMC,EAAS,CACXC,UAAWvD,KAAKC,YAGHD,KAAKwD,KAGjBR,IAAIM,EAAQ,YAAa,EAAG,EAAG,IAC/BG,KAAK,mBACLC,UAAUC,IACP3D,KAAKC,WAAa0D,CAAK,GAEnC,E","sources":["webpack://babylonjs-fluid-rendering/./src/scenes/fluidSimulationDemoPrecomputeRendering.ts"],"sourcesContent":["import * as BABYLON from \"@babylonjs/core\";\nimport { FluidRenderingObjectVertexBuffer } from \"./FluidRenderer/fluidRenderingObjectVertexBuffer\";\n\nimport { FluidSimulationDemoBase } from \"./fluidSimulationDemoBase\";\n\n// Pre-computed frames come from https://github.com/ttnghia/RealTimeFluidRendering/releases/tag/Datasets\nexport class FluidSimulationDemoPrecomputeRendering extends FluidSimulationDemoBase {\n    private _animSpeed: number;\n\n    constructor(scene: BABYLON.Scene) {\n        super(scene, true);\n\n        this._animSpeed = 0.5;\n    }\n\n    protected async _run() {\n        const camera =\n            this._scene.activeCameras?.[0] ?? this._scene.activeCamera;\n\n        if (camera) {\n            (camera as BABYLON.ArcRotateCamera).alpha = -0.631;\n            (camera as BABYLON.ArcRotateCamera).beta = 1.318;\n            (camera as BABYLON.ArcRotateCamera).radius = 1.866;\n        }\n\n        const numFrames = 160;\n        const positionBuffers: Array<Float32Array> = [];\n\n        let numParticles = 0;\n        //let particleRadius = 0;\n\n        for (let i = 0; i < numFrames; ++i) {\n            const num = \"000\" + (i + 1);\n            const buffer = await (\n                await fetch(\n                    \"/assets/particles/SphereDropGround/frame.\" +\n                        num.substring(num.length - 4) +\n                        \".pos\"\n                )\n            ).arrayBuffer();\n            const buffer32 = new Uint32Array(buffer);\n            const bufferFloat = new Float32Array(buffer);\n\n            numParticles = buffer32[0];\n            //particleRadius = bufferFloat[1];\n\n            const positions = new Float32Array(numParticles * 3);\n\n            for (let i = 0; i < numParticles; ++i) {\n                const x = bufferFloat[2 + i * 3 + 0];\n                const y = bufferFloat[2 + i * 3 + 1];\n                const z = bufferFloat[2 + i * 3 + 2];\n\n                positions[i * 3 + 0] = x;\n                positions[i * 3 + 1] = y;\n                positions[i * 3 + 2] = -z;\n            }\n\n            positionBuffers.push(positions);\n        }\n\n        this._fluidRenderObject.object.vertexBuffers[\"position\"] =\n            new BABYLON.VertexBuffer(\n                this._engine,\n                positionBuffers[0],\n                BABYLON.VertexBuffer.PositionKind,\n                true,\n                false,\n                3,\n                true\n            );\n\n        (\n            this._fluidRenderObject.object as FluidRenderingObjectVertexBuffer\n        ).setNumParticles(numParticles);\n\n        this._fluidRenderObject.object.particleSize = 0.03;\n        this._fluidRenderObject.object.particleThicknessAlpha = 0.007;\n        this._fluidRenderObject.targetRenderer.minimumThickness = 0;\n        this._fluidRenderObject.targetRenderer.blurDepthFilterSize = 10;\n        this._fluidRenderObject.targetRenderer.blurDepthDepthScale = 10;\n        this._fluidRenderObject.targetRenderer.thicknessMapSize = 256;\n        this._fluidRenderObject.targetRenderer.refractionStrength = 0.1;\n        this._fluidRenderObject.targetRenderer.blurThicknessFilterSize = 5;\n        this._fluidRenderObject.targetRenderer.blurThicknessNumIterations = 1;\n        this._fluidRenderObject.targetRenderer.density = 3;\n        this._fluidRenderObject.targetRenderer.specularPower = 250;\n\n        let t = 0;\n\n        this._sceneObserver = this._scene.onBeforeRenderObservable.add(() => {\n            this._fluidRenderObject.object.vertexBuffers[\n                \"position\"\n            ].updateDirectly(positionBuffers[Math.floor(t)], 0);\n            t += this._animSpeed;\n            if (t >= numFrames) {\n                t = 0;\n            }\n        });\n\n        super._run();\n    }\n\n    protected _makeGUIMainMenu(): void {\n        const params = {\n            animSpeed: this._animSpeed,\n        };\n\n        const mainMenu = this._gui!;\n\n        mainMenu\n            .add(params, \"animSpeed\", 0, 1, 0.1)\n            .name(\"Animation speed\")\n            .onChange((value: any) => {\n                this._animSpeed = value;\n            });\n    }\n}\n"],"names":["FluidSimulationDemoPrecomputeRendering","FluidSimulationDemoBase","constructor","scene","super","this","_animSpeed","async","camera","_scene","activeCameras","activeCamera","alpha","beta","radius","positionBuffers","numParticles","i","num","buffer","fetch","substring","length","arrayBuffer","buffer32","Uint32Array","bufferFloat","Float32Array","positions","x","y","z","push","_fluidRenderObject","object","vertexBuffers","_engine","setNumParticles","particleSize","particleThicknessAlpha","targetRenderer","minimumThickness","blurDepthFilterSize","blurDepthDepthScale","thicknessMapSize","refractionStrength","blurThicknessFilterSize","blurThicknessNumIterations","density","specularPower","t","_sceneObserver","onBeforeRenderObservable","add","updateDirectly","Math","floor","_run","_makeGUIMainMenu","params","animSpeed","_gui","name","onChange","value"],"sourceRoot":""}