{"version":3,"file":"710.dd7f21a6b534f3791d89.js","mappings":"8MAMO,MAAMA,UAAmC,EAAAC,wBAM5CC,YAAYC,GACRC,MAAMD,GAENE,KAAKC,iBAAmB,UACxBD,KAAKE,UAAY,KAEjBF,KAAKG,qBAAuB,KAC5BH,KAAKI,cAAgB,KAErBJ,KAAKK,kBAAkB,IAAI,UAAgB,EAAG,EAAG,GAAI,GAAK,IAE1DL,KAAKM,SAAS,aAClB,CAEUC,eAAeC,EAAcC,GAAmB,GAGtD,OAFAT,KAAKE,UAAYM,EAETA,GACJ,IAAK,aACDR,KAAKU,iBACD,IAAI,UAAgB,KAAO,GAAK,GAChC,IAAI,UAAgB,EAAG,EAAG,GAC1B,iBACA,kBACA,EACA,KAEJ,MACJ,IAAK,SACDV,KAAKU,iBACD,IAAI,WAAiB,IAAM,IAAM,KACjC,IAAI,UAAgB,GAAI,EAAK,GAC7B,iBACA,kBACA,EACA,GAKRD,IACAT,KAAKW,wBAA0BC,QAAQC,IACnCb,KAAKc,0BAGjB,CAEOP,a,QAiCH,MAAMQ,EAC4B,QAA9B,EAAyB,QAAzB,EAAAf,KAAKgB,OAAOC,qBAAa,eAAG,UAAE,QAAIjB,KAAKgB,OAAOE,aAE9CH,IACCA,EAAmCI,MAAQ,KAC3CJ,EAAmCK,KAAO,KAC1CL,EAAmCM,OAAS,KAIjDrB,KAAKsB,mBAAmBC,OAAOC,aAAe,IAE9CxB,KAAKyB,UAAWC,gBAAkB,IAClC1B,KAAKyB,UAAWE,iBAAmB,IACnC3B,KAAKyB,UAAWG,iBAAmB,EACnC5B,KAAKyB,UAAWI,UAAY,KAC5B7B,KAAKyB,UAAWK,YAAc,GAC9B9B,KAAKyB,UAAWM,gBAAkB,IAElC/B,KAAKgC,2BAA6B,IAElChC,KAAKiC,mBAAoBC,SAASC,EAAI,GACtCnC,KAAKiC,mBAAoBC,SAASE,EAAI,IACtCpC,KAAKiC,mBAAoBC,SAASG,GAAK,IAEvCtC,MAAMuC,MACV,CAEOC,UACHxC,MAAMwC,UAENvC,KAAKgB,OAAOwB,yBAAyBC,OAAOzC,KAAKG,qBACrD,CAEUuC,mBACN,MAAMC,EAAS,CACXC,QAAS,KACL5C,KAAK6C,oBAAoB,EAE7BC,SAAU9C,KAAKE,WAGb6C,EAAW/C,KAAKgD,KAEtBD,EAASE,IAAIN,EAAQ,WAAWnC,KAAK,WAErCuC,EACKE,IAAIN,EAAQ,WAAY,CAAC,SAAU,eACnCnC,KAAK,QACL0C,UAAUC,IACPnD,KAAKoD,uBAAuBpD,KAAKW,kBAAkB0C,OAAS,GAC5DrD,KAAKM,SAAS6C,GAAO,EAAK,GAEtC,E","sources":["webpack://babylonjs-fluid-rendering/./src/scenes/fluidSimulationDemoMeshSDF.ts"],"sourcesContent":["import * as BABYLON from \"@babylonjs/core\";\n//import * as BABYLONSER from \"@babylonjs/serializers\";\n\nimport { FluidSimulationDemoBase } from \"./fluidSimulationDemoBase\";\n\n// High heels model by cebraVFX found on Sketchfab (https://sketchfab.com/3d-models/high-heels-1561c09fc45349d680e48e3e007b64e0)\nexport class FluidSimulationDemoMeshSDF extends FluidSimulationDemoBase {\n    private _sceneRenderObserver: BABYLON.Nullable<\n        BABYLON.Observer<BABYLON.Scene>\n    >;\n    private _meshName: string;\n\n    constructor(scene: BABYLON.Scene) {\n        super(scene);\n\n        this._environmentFile = \"Parking\";\n        this._meshName = null as any;\n\n        this._sceneRenderObserver = null;\n        this._numParticles = 7500;\n\n        this.addCollisionPlane(new BABYLON.Vector3(0, 1, 0), 0.5, 0.3);\n\n        this._addMesh(\"High heels\");\n    }\n\n    protected async _addMesh(name: string, waitForReadiness = false) {\n        this._meshName = name;\n\n        switch (name) {\n            case \"High heels\":\n                this.addCollisionMesh(\n                    new BABYLON.Vector3(0.85, -0.5, 0),\n                    new BABYLON.Vector3(0, 0, 0),\n                    \"high_heels.obj\",\n                    \"high_heels.sdf\",\n                    false,\n                    0.03\n                );\n                break;\n            case \"Dragon\":\n                this.addCollisionMesh(\n                    new BABYLON.Vector3(-0.1, -0.5, -2.4),\n                    new BABYLON.Vector3(0, -1.0, 0),\n                    \"Dragon_50k.obj\",\n                    \"Dragon_50k.sdf\",\n                    true,\n                    3\n                );\n                break;\n        }\n\n        if (waitForReadiness) {\n            this._collisionObjects = await Promise.all(\n                this._collisionObjectPromises\n            );\n        }\n    }\n\n    public async _run() {\n        /*for (let i = 2; i <= 17; ++i) {\n            const m = this._scene.meshes[i] as BABYLON.Mesh;\n            m.bakeCurrentTransformIntoVertices();\n            m.parent = null;\n            m.scaling.setAll(10);\n            m.bakeCurrentTransformIntoVertices();\n        }\n\n        const mm = BABYLON.Mesh.MergeMeshes([\n            this._scene.meshes[2] as BABYLON.Mesh,\n            this._scene.meshes[3] as BABYLON.Mesh,\n            this._scene.meshes[4] as BABYLON.Mesh,\n            this._scene.meshes[5] as BABYLON.Mesh,\n            this._scene.meshes[6] as BABYLON.Mesh,\n            this._scene.meshes[7] as BABYLON.Mesh,\n            this._scene.meshes[8] as BABYLON.Mesh,\n            this._scene.meshes[9] as BABYLON.Mesh,\n            this._scene.meshes[10] as BABYLON.Mesh,\n            this._scene.meshes[11] as BABYLON.Mesh,\n            this._scene.meshes[12] as BABYLON.Mesh,\n            this._scene.meshes[13] as BABYLON.Mesh,\n            this._scene.meshes[14] as BABYLON.Mesh,\n            this._scene.meshes[15] as BABYLON.Mesh,\n            this._scene.meshes[16] as BABYLON.Mesh,\n            this._scene.meshes[17] as BABYLON.Mesh,\n        ], false, true, undefined, false, false);\n\n        console.log(BABYLONSER.OBJExport.OBJ([mm!]));\n\n        mm?.dispose();*/\n\n        // Reset camera\n        const camera =\n            this._scene.activeCameras?.[0] ?? this._scene.activeCamera;\n\n        if (camera) {\n            (camera as BABYLON.ArcRotateCamera).alpha = 2.62;\n            (camera as BABYLON.ArcRotateCamera).beta = 1.11;\n            (camera as BABYLON.ArcRotateCamera).radius = 8.4;\n        }\n\n        // Simulation parameters\n        this._fluidRenderObject.object.particleSize = 0.08;\n\n        this._fluidSim!.smoothingRadius = 0.04;\n        this._fluidSim!.densityReference = 20000;\n        this._fluidSim!.pressureConstant = 4;\n        this._fluidSim!.viscosity = 0.005;\n        this._fluidSim!.maxVelocity = 10;\n        this._fluidSim!.maxAcceleration = 2000;\n\n        this._shapeCollisionRestitution = 0.99;\n\n        this._particleGenerator!.position.x = 0.2;\n        this._particleGenerator!.position.y = 2.8;\n        this._particleGenerator!.position.z = -1.5;\n\n        super._run();\n    }\n\n    public dispose(): void {\n        super.dispose();\n\n        this._scene.onBeforeRenderObservable.remove(this._sceneRenderObserver);\n    }\n\n    protected _makeGUIMainMenu(): void {\n        const params = {\n            restart: () => {\n                this._generateParticles();\n            },\n            meshname: this._meshName,\n        };\n\n        const mainMenu = this._gui!;\n\n        mainMenu.add(params, \"restart\").name(\"Restart\");\n\n        mainMenu\n            .add(params, \"meshname\", [\"Dragon\", \"High heels\"])\n            .name(\"Name\")\n            .onChange((value: any) => {\n                this.disposeCollisionObject(this._collisionObjects.length - 1);\n                this._addMesh(value, true);\n            });\n    }\n}\n"],"names":["FluidSimulationDemoMeshSDF","FluidSimulationDemoBase","constructor","scene","super","this","_environmentFile","_meshName","_sceneRenderObserver","_numParticles","addCollisionPlane","_addMesh","async","name","waitForReadiness","addCollisionMesh","_collisionObjects","Promise","all","_collisionObjectPromises","camera","_scene","activeCameras","activeCamera","alpha","beta","radius","_fluidRenderObject","object","particleSize","_fluidSim","smoothingRadius","densityReference","pressureConstant","viscosity","maxVelocity","maxAcceleration","_shapeCollisionRestitution","_particleGenerator","position","x","y","z","_run","dispose","onBeforeRenderObservable","remove","_makeGUIMainMenu","params","restart","_generateParticles","meshname","mainMenu","_gui","add","onChange","value","disposeCollisionObject","length"],"sourceRoot":""}