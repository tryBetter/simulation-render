{"version":3,"file":"247.11bb68787755261db8a8.js","mappings":"yLAEO,MAAMA,EAeTC,YAAYC,EAAwBC,EAAeC,GAV3C,KAAAC,eAEJ,CAAC,EASDC,KAAKC,QAAUL,EACfI,KAAKE,OAASL,EACdG,KAAKG,QAAUL,EAEfE,KAAKI,gBAAkBJ,KAAKC,QAAQI,0BAChC,CAAER,QAAOC,UACT,CACIQ,iBAAiB,EACjBC,KAAM,sCACNC,OAAQ,4BACRC,aAAc,yCACdC,qBAAqB,EACrBC,uBAAuB,EACvBC,QAAS,EACTC,eAAe,IAGvBb,KAAKI,gBAAgBU,0BAA0B,GAAG,GAAO,EAAO,GAEhEd,KAAKe,mBAAqB,IAAI,gBAAsB,CAChDnB,OAAQI,KAAKC,QACbe,gBAAgB,EAChBC,aAAc,YACdC,eAAgB,YAChBC,eAAgB,CAAC,YACjBC,aAAc,GACdC,aAAc,CAAC,gBACfC,eAAgB1B,EAAO2B,SACjB,sBACA,wBAIV,MAAMC,EAAW,GACjBA,EAASC,KAAK,EAAG,GACjBD,EAASC,MAAM,EAAG,GAClBD,EAASC,MAAM,GAAI,GACnBD,EAASC,KAAK,GAAI,GAElBzB,KAAKD,eAAe,6BAChB,IAAI,eACAC,KAAKC,QACLuB,EACA,6BACA,GACA,EACA,GAIR,MAAME,EAAU,GAChBA,EAAQD,KAAK,GACbC,EAAQD,KAAK,GACbC,EAAQD,KAAK,GAEbC,EAAQD,KAAK,GACbC,EAAQD,KAAK,GACbC,EAAQD,KAAK,GAEbzB,KAAK2B,aAAe3B,KAAKC,QAAQ2B,kBAAkBF,EACvD,CAjEWG,qBACP,OAAO7B,KAAKI,eAChB,CAiEO0B,KAAKC,GACR,MAAMC,EAAShC,KAAKe,mBAAmBiB,OAEvC,IAAKA,EAAOC,UACR,OAAO,EAGXjC,KAAKC,QAAQiC,gBAAgBlC,KAAKI,iBAElCJ,KAAKC,QAAQkC,aAAanC,KAAKe,mBAAmBqB,cAElD,MAAMC,EAAkBrC,KAAKC,QAAQqC,mBA2BrC,OAzBAtC,KAAKC,QAAQsC,UAAS,GACtBvC,KAAKC,QAAQuC,gBAAe,GAC5BxC,KAAKC,QAAQwC,eAAc,GAC3BzC,KAAKC,QAAQyC,iBAAiB,oBAC9B1C,KAAKC,QAAQ0C,eAAc,GAE3B3C,KAAKC,QAAQ2C,YACT5C,KAAKD,eACLC,KAAK2B,aACLK,GAGJA,EAAOa,aAAa,eAAgBd,GAEpC/B,KAAKC,QAAQ6C,iBACT,sCACA,EACA,GAGJ9C,KAAKC,QAAQyC,iBAAiBL,GAC9BrC,KAAKC,QAAQ0C,eAAc,GAE3B3C,KAAKC,QAAQ8C,kBAAkB/C,KAAKI,kBAE7B,CACX,CAEO4C,U,MACHhD,KAAKI,gBAAgB4C,UAEiC,QAAtD,EAAAhD,KAAKD,eAAe,oCAAkC,SAAEiD,UACxDhD,KAAKD,eAAiB,CAAC,EAEnBC,KAAK2B,eACL3B,KAAKC,QAAQgD,eAAejD,KAAK2B,cACjC3B,KAAK2B,aAAe,KAE5B,E","sources":["webpack://babylonjs-fluid-rendering/./src/scenes/Utils/copyDepthTexture.ts"],"sourcesContent":["import * as BABYLON from \"@babylonjs/core\";\n\nexport class CopyDepthTexture {\n    private _engine: BABYLON.Engine;\n    private _width: number;\n    private _height: number;\n    private _indexBuffer: BABYLON.Nullable<BABYLON.DataBuffer>;\n    private _vertexBuffers: {\n        [key: string]: BABYLON.Nullable<BABYLON.VertexBuffer>;\n    } = {};\n    private _depthRTWrapper: BABYLON.RenderTargetWrapper;\n    private _copyEffectWrapper: BABYLON.EffectWrapper;\n\n    public get depthRTWrapper() {\n        return this._depthRTWrapper;\n    }\n\n    constructor(engine: BABYLON.Engine, width: number, height: number) {\n        this._engine = engine;\n        this._width = width;\n        this._height = height;\n\n        this._depthRTWrapper = this._engine.createRenderTargetTexture(\n            { width, height },\n            {\n                generateMipMaps: false,\n                type: BABYLON.Constants.TEXTURETYPE_UNSIGNED_BYTE,\n                format: BABYLON.Constants.TEXTUREFORMAT_R,\n                samplingMode: BABYLON.Constants.TEXTURE_NEAREST_SAMPLINGMODE,\n                generateDepthBuffer: true,\n                generateStencilBuffer: false,\n                samples: 1,\n                noColorTarget: true,\n            }\n        );\n        this._depthRTWrapper.createDepthStencilTexture(0, false, false, 1);\n\n        this._copyEffectWrapper = new BABYLON.EffectWrapper({\n            engine: this._engine,\n            useShaderStore: true,\n            vertexShader: \"passDepth\",\n            fragmentShader: \"passDepth\",\n            attributeNames: [\"position\"],\n            uniformNames: [],\n            samplerNames: [\"textureDepth\"],\n            shaderLanguage: engine.isWebGPU\n                ? BABYLON.ShaderLanguage.WGSL\n                : BABYLON.ShaderLanguage.GLSL,\n        });\n\n        // VBO\n        const vertices = [];\n        vertices.push(1, 1);\n        vertices.push(-1, 1);\n        vertices.push(-1, -1);\n        vertices.push(1, -1);\n\n        this._vertexBuffers[BABYLON.VertexBuffer.PositionKind] =\n            new BABYLON.VertexBuffer(\n                this._engine,\n                vertices,\n                BABYLON.VertexBuffer.PositionKind,\n                false,\n                false,\n                2\n            );\n\n        // Indices\n        const indices = [];\n        indices.push(0);\n        indices.push(1);\n        indices.push(2);\n\n        indices.push(0);\n        indices.push(2);\n        indices.push(3);\n\n        this._indexBuffer = this._engine.createIndexBuffer(indices);\n    }\n\n    public copy(source: BABYLON.InternalTexture): boolean {\n        const effect = this._copyEffectWrapper.effect;\n\n        if (!effect.isReady()) {\n            return false;\n        }\n\n        this._engine.bindFramebuffer(this._depthRTWrapper!);\n\n        this._engine.enableEffect(this._copyEffectWrapper._drawWrapper);\n\n        const engineDepthFunc = this._engine.getDepthFunction();\n\n        this._engine.setState(false);\n        this._engine.setDepthBuffer(true);\n        this._engine.setDepthWrite(true);\n        this._engine.setDepthFunction(BABYLON.Constants.ALWAYS);\n        this._engine.setColorWrite(false);\n\n        this._engine.bindBuffers(\n            this._vertexBuffers,\n            this._indexBuffer,\n            effect\n        );\n\n        effect._bindTexture(\"textureDepth\", source);\n\n        this._engine.drawElementsType(\n            BABYLON.Constants.MATERIAL_TriangleFillMode,\n            0,\n            6\n        );\n\n        this._engine.setDepthFunction(engineDepthFunc!);\n        this._engine.setColorWrite(true);\n\n        this._engine.unBindFramebuffer(this._depthRTWrapper!);\n\n        return true;\n    }\n\n    public dispose() {\n        this._depthRTWrapper.dispose();\n\n        this._vertexBuffers[BABYLON.VertexBuffer.PositionKind]?.dispose();\n        this._vertexBuffers = {};\n\n        if (this._indexBuffer) {\n            this._engine._releaseBuffer(this._indexBuffer);\n            this._indexBuffer = null;\n        }\n    }\n}\n"],"names":["CopyDepthTexture","constructor","engine","width","height","_vertexBuffers","this","_engine","_width","_height","_depthRTWrapper","createRenderTargetTexture","generateMipMaps","type","format","samplingMode","generateDepthBuffer","generateStencilBuffer","samples","noColorTarget","createDepthStencilTexture","_copyEffectWrapper","useShaderStore","vertexShader","fragmentShader","attributeNames","uniformNames","samplerNames","shaderLanguage","isWebGPU","vertices","push","indices","_indexBuffer","createIndexBuffer","depthRTWrapper","copy","source","effect","isReady","bindFramebuffer","enableEffect","_drawWrapper","engineDepthFunc","getDepthFunction","setState","setDepthBuffer","setDepthWrite","setDepthFunction","setColorWrite","bindBuffers","_bindTexture","drawElementsType","unBindFramebuffer","dispose","_releaseBuffer"],"sourceRoot":""}